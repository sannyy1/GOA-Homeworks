#3) ახსენით რისთვის გვჭირდება Tuple და რისთვის გვჭირდება Set
#Tuple და Set არის ორი განსხვავებული მონაცემთა ტიპი, რომლებიც გამოიყენება პროგრამირებაში კონკრეტული მიზნებისთვის. ორივე მათი უნიკალური მახასიათებლებით გამოიყენება, რაც მათ სხვადასხვა სიტუაციებში სასარგებლო ხდის.

#--------------------------------------------------------------------------------------


# 4) გაიხსენეთ რა არის Tuple Destructuring და გააკეთეთ 3 მაგალითი
# Tuple Destructuring არის ტექნიკა, რომელიც საშუალებას გვაძლევს ერთი ბრძანებით ამოვიღოთ ელემენტები Tuple-დან და დავაკავშიროთ ისინი ცვლადებთან. ეს ნიშნავს, რომ Tuple-ის ელემენტები ავტომატურად განაწილდება ცვლადებში შესაბამის პოზიციებზე.

person = ("John", 25, "Engineer")

name, age, occupation = person

print(f"Name: {name}, Age: {age}, Occupation: {occupation}")

#--------------------------------------------------------------------------------------

#5)  შექმენით List'ი რომელშიც იქნება დუპლიკატები (ანუ ელემენტები განმეორდება), შემდეგ გამოიყენეთ მასზე ფუნქცია set() (მაგალითად თუ ცვლადის სახელია list1, დაწერთ: **print(set(list1))**) და დააკვირდით რას იზამს. შემდეგ კომენტარების საშუალებით ახსენით რა მოხდა.
list1 = [1, 2, 3, 4, 5, 2, 3, 4, 6, 1]

print(set(list1))

#List1: დასაწყისში გვაქვს list1, რომელშიც გარკვეული ელემენტები განმეორდება (მაგალითად, 1, 2, 3, 4).
#set(list1): როდესაც ფუნქციას set() გამოვიყენებთ, მასზე ავტომატურად მოხდება დუპლიკატების ამოღება, რადგან Set-ი მხოლოდ უნიკალურ ელემენტებს ინახავს.
#გამოსავალი: შედეგი იქნება მხოლოდ უნიკალური ელემენტები, და ამ შემთხვევაში, list1-ში არსებული მნიშვნელობები დაიშლება უნიკალურ ელემენტებად.